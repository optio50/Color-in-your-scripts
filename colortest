#!/bin/bash

# Demo for using color codes in your scripts
# Looks best with white text on black background
# To learn more about tput https://www.gnu.org/software/termutils/manual/termutils-2.0/html_chapter/tput_1.html
# In this example we use tput codes (right side) but you can use ansi codes as well
# such as printf "\033[38;5;130mHello\033[0m\n" <--- prints "Hello" in brown with a mew line
# Above, the 38 5 130 are the ansi codes (left side) we printed out, \n is a new line
#------------------------------------------////
# 	  Loop to list all the color codes:
#------------------------------------------////

for color in {0..255}; do
tput setaf "${color}"; tput setaf "${color}" | command cat -v; tput rev "${color}"; tput smul;  printf "%b\n" "  tput code  "${color}""; tput sgr0;
done

#------------------------------------------////
#	Assign the "color name" as a variable:
# 	Change Color Numbers to your liking:
#------------------------------------------////

black=$(tput setaf 16)
white=$(tput setaf 15)
gray=$(tput setaf 240)
blue=$(tput setaf 21)
green=$(tput setaf 28)
red=$(tput setaf 1)
cyan=$(tput setaf 36)
purple=$(tput setaf 128)
brown=$(tput setaf 130)
yellow=$(tput setaf 226)
orange=$(tput setaf 202)
pink=$(tput setaf 207)
lgray=$(tput setaf 246)
lblue=$(tput setaf 39)
lgreen=$(tput setaf 118)
lred=$(tput setaf 9)
lcyan=$(tput setaf 14)
lpurple=$(tput setaf 99)
normal=$(tput sgr0)
bold=$(tput bold)
standout=$(tput smso)
blink=$(tput blink)
reverse=$(tput rev)
blgray=$(tput setab 246)
#  ^ Background Light Gray. setab instead of setaf
#------------------------------------------////
# 			Array with Variables:
#------------------------------------------////

array=(
"${black}" "############" "${reverse}""       Black        ""${normal}" "${black}" "############" "${white}" "<----- Black\n"
"${white}" "############" "${reverse}""       White        ""${normal}" "${white}" "############" "${black}" "<----- White\n"
"${gray}"  "############" "${reverse}""       Gray         ""${normal}" "${gray}" "############\n"
"${blue}"  "############" "${reverse}""       Blue         ""${normal}" "${blue}" "############\n"
"${green}" "############" "${reverse}""       Green        ""${normal}" "${green}" "############\n"
"${red}"   "############" "${reverse}""       Red          ""${normal}" "${red}" "############\n"
"${cyan}"  "############" "${reverse}""       Cyan         ""${normal}" "${cyan}" "############\n"
"${purple}" "############" "${reverse}""      Purple        ""${normal}" "${purple}" "############\n"
"${brown}" "############" "${reverse}""      Brown         ""${normal}" "${brown}" "############\n"
"${yellow}" "############" "${reverse}""      Yellow        ""${normal}" "${yellow}" "############\n"
"${orange}" "############" "${reverse}""      Orange        ""${normal}" "${orange}" "############\n"
"${pink}" "############" "${reverse}""       Pink         ""${normal}" "${pink}" "############\n"
"${lgray}" "############" "${reverse}""     Light Gray     ""${normal}" "${lgray}" "############\n"
"${lblue}" "############" "${reverse}""     Light Blue     ""${normal}" "${lblue}" "############\n"
"${lgreen}" "############" "${reverse}""     Light Green    ""${normal}" "${lgreen}" "############\n"
"${lred}"  "############" "${reverse}""     Light Red      ""${normal}" "${lred}" "############\n"
"${lcyan}" "############" "${reverse}""     Light Cyan     ""${normal}" "${lcyan}" "############\n"
"${lpurple}" "############" "${reverse}""     Light Purple   ""${normal}" "${lpurple}" "############\n"
"${normal}" "############" "${reverse}""       Normal       ""${normal}" "${normal}" "############\n"
"${red}"   "############" "${white}""${reverse}""${blink}"   "       Blink        ""${normal}"	 	"${blue}""############\n"
)

#------------------------------------------////
#		Print the Array for Demo:
#------------------------------------------////
printf "%b\n" "${yellow}"
#printf "%b\n" "${blgray}"
command cat << 'EOF'
  ____ ___  _     ___  ____      ____  _____ __  __  ___  
 / ___/ _ \| |   / _ \|  _ \    |  _ \| ____|  \/  |/ _ \ 
| |  | | | | |  | | | | |_) |   | | | |  _| | |\/| | | | |
| |__| |_| | |__| |_| |  _ <    | |_| | |___| |  | | |_| |
 \____\___/|_____\___/|_| \_\   |____/|_____|_|  |_|\___/ 
                                                          
EOF
printf "%b\n" "${normal}"
printf "%b" "${array[@]}"
printf "%b" "${normal}" "\n"

#------------------------------------------////
# Print as a single line
# Like you might use in a script:
#------------------------------------------////

printf "%b\n" ""${red}"       Combine colors "${white}"on the "${standout}""${blue}"same line\n"
printf "%b" "${normal}"
printf "%b" "${normal}" "tput is a powerful cursor managment tool." "\n\n"

printf "%b\n\n" " In addition to colors you can even clear certain portions of the screen"
tput civis
read -n 1 -s -p "Press a key to try it"
tput cuu 28
#tput dl 1
#tput el
tput ed
printf "%b\n"
printf "%b" "Or Replace it\n\n"
read -n 1 -s -p "Press a key to try it"
tput cuu 3
printf "%b\n"
tput ed
printf "%b" "${array[@]}\n"
printf "%b" ""${red}"       Combine colors "${white}"on the "${standout}""${blue}"same line\n"
printf "%b" "${normal}"
tput ed
printf "%b\n"
command cat << 'EOF'
To learn more about tput visit

https://www.gnu.org/software/termutils/manual/termutils-2.0/html_chapter/tput_1.html                                                          
EOF
tput cnorm
#printf "%b\n"

